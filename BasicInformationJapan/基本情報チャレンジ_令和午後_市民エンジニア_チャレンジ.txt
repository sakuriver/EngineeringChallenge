問１０ 現行業務分析
    4/6  13.3/20
    設問１
        a ウ....イ
        b オ....〇
        c イ....〇
        d エ.....イ
    設問2
        e ウ.....〇
        f ア.....〇

元ファイル
SRT-REC
   /// 店舗番号
   int SRT-STOR
   /// 弁当種別
   int SRT-CODE
   /// 値引き率
   int SRT-DSCT

表示・印刷領域
PRT-STOR
PRT-SP1
PRT-CODE
PRT-SP2
PRT-SALNO
PRT-SP3
PRT-DSCT
PRT-SP4
PRT-DSPNO

変数一覧

    SRT-FLAG
    SRT-EOF
    CR-STOR
    CR-CODE    
    W-SALNO
    W-DSPNO
    W-TOTAL
    W-DSCT

    販売リストファイルを書き込み用に開く
        店舗番号、弁当種別の順番で販売ファイルを並び変える
        お弁当の廃棄処理判定を実施する
    販売リストファイルを閉じる    
    処理を終了    

    販売ファイル処理関数
        販売ファイル読み込み終了フラグがTRUEになるまで続ける
            販売ファイルのレコード取得処理
            最終レコードに到達していたら
            　　販売ファイル終了フラグ = TRUE
            それ以外の場合
                廃棄処理を実施する
            レコード取得処理を終了する

     販売レコード毎の廃棄率判定処理
       今の店舗コードが　前行の店舗コードと比較して変わっていて　更に
         // 前行の弁当箱は一つも売れなかったので、０を印字する

         = ZERO  
         CR-STOR = SRT-STOR
         CR-CODE = SRT-CODE       
       廃棄率が100の場合は
          W-DSPNO += 1
       それ以外の場合は   
          W-SALNO += 1
       分岐処理終了        

問１３ 近代化第１弾(マクロ編)
    13.3/20
    設問１
        a ウ....エ
        b イ....エ
        c ウ....〇
    設問２
        // 合計重量の計算
        d  キ....〇
        // ダンボールに詰めるメロン割り振り条件
        e  キ....〇
        // ループ終了後のまとめ処理
        f  イ....〇

　　　　合計重量セル = 

       d. 合計なので、加算するときに同じセル情報を使っていないのを除外
       エ, オ 
       同じセルをずっと加算しているだけなので除外
       ア、カ

       イ、ウ、キ、ク
        １度のループで終了すると列の加算にならないので
        イ、ウを除外

　　　　
　　　　e どちらかとなっているので
       ア、イ、ウ、エ....4つ除外
       4つまでは埋められるので、クを除外
       5kgが条件なので、カを除外
       



　　　　ア、エ、オ、カ....kのループと関連性がないから除外
        
        イ 相対[a1+j][k] = null
        ウ 相対[a1+j][k] = 相対[a1+j][k]+1 
       

    while ( != null)    {
        if ( == '並') {

        }
    }


    func Packing() {
        int i = 1;
        int j = 1;
        while(表ベース[集計表!A1+i][0] != null ) {
            // 等級セルが並の場合
            if (表ベース[集計表!E1+i][0] == '並') {
                if (CurrentColumn == 0) {
                    表ベース[集計表!A1+j][0] = j;
                    表ベース[集計表!F1+j][0] = 0;
                }

                //
                表ベース[B1+j][CurrentColumn] = 表ベース[A1+i][0]

                CurrencColumn = CurrencColumn + 1
                if () {
                    j = j + 1;
                    CurrencColumn = 0;

                }

            }
            i = i + 1;

        }

        // 合計重量が含まれている場合
        if (表ベース[F1+j][0] != null) {

            for (k = 0 ; k <= 5; k++) {

            }
        }
    }